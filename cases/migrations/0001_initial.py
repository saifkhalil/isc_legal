# Generated by Django 4.1.2 on 2022-10-11 06:50

import cases.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
        ('activities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='case_status',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=250, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Case Status',
                'verbose_name_plural': 'Case Statuses',
            },
        ),
        migrations.CreateModel(
            name='client_position',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Client Position',
                'verbose_name_plural': 'Client Positions',
            },
        ),
        migrations.CreateModel(
            name='client_type',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=250, verbose_name='Client type')),
            ],
            options={
                'verbose_name': 'Client Type',
                'verbose_name_plural': 'Client Types',
            },
        ),
        migrations.CreateModel(
            name='companies_category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=250, verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Company category',
                'verbose_name_plural': 'Company categories',
            },
        ),
        migrations.CreateModel(
            name='companies_group',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('group', models.CharField(max_length=250, verbose_name='Group')),
            ],
            options={
                'verbose_name': 'Company Group',
                'verbose_name_plural': 'Company Groups',
            },
        ),
        migrations.CreateModel(
            name='companies_sub_category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sub_category', models.CharField(max_length=250, verbose_name='Sub-category')),
            ],
            options={
                'verbose_name': 'Company sub-category',
                'verbose_name_plural': 'Company sub-categories',
            },
        ),
        migrations.CreateModel(
            name='company',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=250, verbose_name='Full Name')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('foreign_name', models.CharField(max_length=250, verbose_name='Foreign Name')),
                ('reference', models.CharField(max_length=100, verbose_name='Reference')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cases.companies_category', verbose_name='Category')),
                ('company_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cases.companies_group', verbose_name='Company Group')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='company_legal_type',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('legal_type', models.CharField(max_length=250, verbose_name='Legal type')),
            ],
            options={
                'verbose_name': 'Company legal type',
                'verbose_name_plural': 'Company legal types',
            },
        ),
        migrations.CreateModel(
            name='opponent_position',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.CharField(max_length=250, verbose_name='Position')),
            ],
            options={
                'verbose_name': 'Opponent Position',
                'verbose_name_plural': 'Opponent Positions',
            },
        ),
        migrations.CreateModel(
            name='persons',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
            },
        ),
        migrations.CreateModel(
            name='practice_area',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Practice Area',
                'verbose_name_plural': 'Practice Areas',
            },
        ),
        migrations.CreateModel(
            name='stages',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Stage',
                'verbose_name_plural': 'Stage',
            },
        ),
        migrations.CreateModel(
            name='LitigationCases',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cid', models.CharField(max_length=20, verbose_name='Case ID')),
                ('name', models.CharField(max_length=500, verbose_name='Title')),
                ('description', models.CharField(max_length=500, verbose_name='Subject')),
                ('arrival_date', models.DateTimeField(verbose_name='Entry Date')),
                ('filed_on', models.DateField(verbose_name='Filed on')),
                ('due_date', models.DateField(verbose_name='Due date')),
                ('internal_ref_number', models.CharField(max_length=50, verbose_name='Internal Ref Number')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('Stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cases.stages', verbose_name='Stage')),
                ('assigned_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group', verbose_name='Assigned Team')),
                ('assignee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_assignee', to=settings.AUTH_USER_MODEL, verbose_name='Assignee')),
                ('case_status', models.ForeignKey(default=cases.models.case_status.get_default, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_case_status', to='cases.case_status', verbose_name='Case Status')),
                ('client_position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cases.client_position', verbose_name='Client Position')),
                ('comments', models.ManyToManyField(to='core.comments', verbose_name='Comments')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cases.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_createdby', to=settings.AUTH_USER_MODEL)),
                ('event', models.ManyToManyField(blank=True, related_name='%(class)s_event', to='activities.event', verbose_name='Event')),
                ('hearing', models.ManyToManyField(blank=True, to='activities.hearing', verbose_name='Hearing')),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_modifiedby', to=settings.AUTH_USER_MODEL)),
                ('opponent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_opponent', to='cases.persons', verbose_name='Opponent')),
                ('opponent_position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cases.opponent_position', verbose_name='Opponent Position')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_person', to='cases.persons', verbose_name='Person')),
                ('practice_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cases.practice_area', verbose_name='Practice area')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.priorities', verbose_name='Matter Priority')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_requested_by', to=settings.AUTH_USER_MODEL, verbose_name='Requested By')),
                ('shared_with', models.ManyToManyField(blank=True, related_name='%(class)s_shared_with', to=settings.AUTH_USER_MODEL, verbose_name='Shared With')),
                ('tasks', models.ManyToManyField(blank=True, related_name='%(class)s_task', to='activities.task', verbose_name='Task')),
            ],
            options={
                'verbose_name': 'Litigation Case',
                'verbose_name_plural': 'Litigation Cases',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='company_legal_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cases.company_legal_type', verbose_name='Company Legal Type'),
        ),
        migrations.AddField(
            model_name='company',
            name='sub_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cases.companies_sub_category', verbose_name='Sub-category'),
        ),
        migrations.CreateModel(
            name='companies_address',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.CharField(max_length=250, verbose_name='Address')),
                ('state', models.CharField(blank=True, max_length=250, null=True, verbose_name='State')),
                ('zip', models.IntegerField(blank=True, null=True, verbose_name='Zip')),
                ('street_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Street Name')),
                ('building_number', models.CharField(blank=True, max_length=250, null=True, verbose_name='Building Number')),
                ('district', models.CharField(blank=True, max_length=250, null=True, verbose_name='District/Neighborhood')),
                ('mobile', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Mobile')),
                ('fax', models.CharField(blank=True, max_length=250, null=True, verbose_name='Fax')),
                ('city', models.CharField(blank=True, max_length=250, null=True, verbose_name='City')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('additional_street_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Additional Street Name')),
                ('address_additional_number', models.CharField(blank=True, max_length=250, null=True, verbose_name='Address Additional Number')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Phone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='Country')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cases.company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Company Address',
                'verbose_name_plural': 'Company Address',
            },
        ),
    ]
