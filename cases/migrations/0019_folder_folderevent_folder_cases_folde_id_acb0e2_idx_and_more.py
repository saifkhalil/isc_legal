# Generated by Django 4.1.3 on 2023-01-08 09:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0011_commentsevent_contractsevent_courtevent_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pghistory', '0005_events_middlewareevents'),
        ('activities', '0013_hearingevent_taskevent_hearing_snapshot_insert_and_more'),
        ('cases', '0018_casetypeevent_clientpositionevent_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=500, verbose_name='Title')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Subject')),
                ('folder_category', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], default='Public', max_length=500, verbose_name='Folder Category')),
                ('judge', models.CharField(blank=True, max_length=500, null=True, verbose_name='Judge Name')),
                ('detective', models.CharField(blank=True, max_length=500, null=True, verbose_name='Detective')),
                ('internal_ref_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Internal Ref Number')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('Stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cases.stages', verbose_name='Stage')),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_assignee', to=settings.AUTH_USER_MODEL, verbose_name='Assignee')),
                ('client_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cases.client_position', verbose_name='Client Position')),
                ('comments', models.ManyToManyField(blank=True, to='core.comments', verbose_name='Comments')),
                ('court', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.court', verbose_name='Court name')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_createdby', to=settings.AUTH_USER_MODEL)),
                ('documents', models.ManyToManyField(blank=True, to='core.documents', verbose_name='Hearing')),
                ('folder_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cases.case_type', verbose_name='Folder type')),
                ('hearing', models.ManyToManyField(blank=True, to='activities.hearing', verbose_name='Hearing')),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_modifiedby', to=settings.AUTH_USER_MODEL)),
                ('opponent_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cases.opponent_position', verbose_name='Opponent Position')),
                ('priority', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.priorities', verbose_name='Matter Priority')),
                ('shared_with', models.ManyToManyField(blank=True, related_name='%(class)s_shared_with', to=settings.AUTH_USER_MODEL, verbose_name='Shared With')),
                ('tasks', models.ManyToManyField(blank=True, related_name='%(class)s_task', to='activities.task', verbose_name='Task')),
            ],
            options={
                'verbose_name': 'Folder',
                'verbose_name_plural': 'Folders',
            },
        ),
        migrations.CreateModel(
            name='FolderEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('name', models.CharField(max_length=500, verbose_name='Title')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Subject')),
                ('folder_category', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], default='Public', max_length=500, verbose_name='Folder Category')),
                ('judge', models.CharField(blank=True, max_length=500, null=True, verbose_name='Judge Name')),
                ('detective', models.CharField(blank=True, max_length=500, null=True, verbose_name='Detective')),
                ('internal_ref_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Internal Ref Number')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('Stage', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='cases.stages', verbose_name='Stage')),
                ('assignee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Assignee')),
                ('client_position', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='cases.client_position', verbose_name='Client Position')),
                ('court', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='core.court', verbose_name='Court name')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL)),
                ('folder_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='cases.case_type', verbose_name='Folder type')),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL)),
                ('opponent_position', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='cases.opponent_position', verbose_name='Opponent Position')),
                ('pgh_context', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context')),
                ('pgh_obj', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='cases.folder')),
                ('priority', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='core.priorities', verbose_name='Matter Priority')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='folder',
            index=models.Index(fields=['id', 'name', 'Stage', 'folder_type', 'folder_category', 'assignee', 'court', 'description'], name='cases_folde_id_acb0e2_idx'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='folder',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "cases_folderevent" ("Stage_id", "assignee_id", "client_position_id", "court_id", "created_at", "created_by_id", "description", "detective", "end_time", "folder_category", "folder_type_id", "id", "internal_ref_number", "is_deleted", "judge", "modified_at", "modified_by_id", "name", "opponent_position_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority_id", "start_time") VALUES (NEW."Stage_id", NEW."assignee_id", NEW."client_position_id", NEW."court_id", NEW."created_at", NEW."created_by_id", NEW."description", NEW."detective", NEW."end_time", NEW."folder_category", NEW."folder_type_id", NEW."id", NEW."internal_ref_number", NEW."is_deleted", NEW."judge", NEW."modified_at", NEW."modified_by_id", NEW."name", NEW."opponent_position_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."priority_id", NEW."start_time"); RETURN NULL;', hash='8cadaa88b65c1ea4e5dccb16d1a969707ca9843a', operation='INSERT', pgid='pgtrigger_snapshot_insert_72454', table='cases_folder', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='folder',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "cases_folderevent" ("Stage_id", "assignee_id", "client_position_id", "court_id", "created_at", "created_by_id", "description", "detective", "end_time", "folder_category", "folder_type_id", "id", "internal_ref_number", "is_deleted", "judge", "modified_at", "modified_by_id", "name", "opponent_position_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority_id", "start_time") VALUES (NEW."Stage_id", NEW."assignee_id", NEW."client_position_id", NEW."court_id", NEW."created_at", NEW."created_by_id", NEW."description", NEW."detective", NEW."end_time", NEW."folder_category", NEW."folder_type_id", NEW."id", NEW."internal_ref_number", NEW."is_deleted", NEW."judge", NEW."modified_at", NEW."modified_by_id", NEW."name", NEW."opponent_position_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."priority_id", NEW."start_time"); RETURN NULL;', hash='160518ff3bf525f100022b08045461e6e48ac0c0', operation='UPDATE', pgid='pgtrigger_snapshot_update_9f4aa', table='cases_folder', when='AFTER')),
        ),
    ]
