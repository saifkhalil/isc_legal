# Generated by Django 4.1.3 on 2022-11-20 11:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pghistory', '0005_events_middlewareevents'),
        ('core', '0011_commentsevent_contractsevent_courtevent_and_more'),
        ('cases', '0017_litigationcases_cases_litig_id_5c9221_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='CaseTypeEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('type', models.CharField(max_length=250, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClientPositionEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LitigationCasesEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('name', models.CharField(max_length=500, verbose_name='Title')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Subject')),
                ('case_category', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], default='Public', max_length=500, verbose_name='Case Category')),
                ('judge', models.CharField(blank=True, max_length=500, null=True, verbose_name='Judge Name')),
                ('detective', models.CharField(blank=True, max_length=500, null=True, verbose_name='Detective')),
                ('internal_ref_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Internal Ref Number')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OpponentPositionEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('position', models.CharField(max_length=250, verbose_name='Position')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StagesEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='case_type',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "cases_casetypeevent" ("id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "type") VALUES (NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."type"); RETURN NULL;', hash='91de3e397a8998f383881039f70a14d5e0929d3f', operation='INSERT', pgid='pgtrigger_snapshot_insert_0bd9c', table='cases_case_type', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='case_type',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "cases_casetypeevent" ("id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "type") VALUES (NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."type"); RETURN NULL;', hash='171ba3200834ad9d380748f700a532c0c7774beb', operation='UPDATE', pgid='pgtrigger_snapshot_update_35c45', table='cases_case_type', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='client_position',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "cases_clientpositionevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='087414159316e714316e731cab14c765ee4a450d', operation='INSERT', pgid='pgtrigger_snapshot_insert_d43f4', table='cases_client_position', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='client_position',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "cases_clientpositionevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='c2311300b82ec060de34a6d9f329c115ed006228', operation='UPDATE', pgid='pgtrigger_snapshot_update_a87e4', table='cases_client_position', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='litigationcases',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "cases_litigationcasesevent" ("Stage_id", "assignee_id", "case_category", "case_type_id", "client_position_id", "court_id", "created_at", "created_by_id", "description", "detective", "end_time", "id", "internal_ref_number", "is_deleted", "judge", "modified_at", "modified_by_id", "name", "opponent_position_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority_id", "start_time") VALUES (NEW."Stage_id", NEW."assignee_id", NEW."case_category", NEW."case_type_id", NEW."client_position_id", NEW."court_id", NEW."created_at", NEW."created_by_id", NEW."description", NEW."detective", NEW."end_time", NEW."id", NEW."internal_ref_number", NEW."is_deleted", NEW."judge", NEW."modified_at", NEW."modified_by_id", NEW."name", NEW."opponent_position_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."priority_id", NEW."start_time"); RETURN NULL;', hash='0a6e7468b819ce2c4012b5a36a195831e2e3cdce', operation='INSERT', pgid='pgtrigger_snapshot_insert_38763', table='cases_litigationcases', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='litigationcases',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "cases_litigationcasesevent" ("Stage_id", "assignee_id", "case_category", "case_type_id", "client_position_id", "court_id", "created_at", "created_by_id", "description", "detective", "end_time", "id", "internal_ref_number", "is_deleted", "judge", "modified_at", "modified_by_id", "name", "opponent_position_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority_id", "start_time") VALUES (NEW."Stage_id", NEW."assignee_id", NEW."case_category", NEW."case_type_id", NEW."client_position_id", NEW."court_id", NEW."created_at", NEW."created_by_id", NEW."description", NEW."detective", NEW."end_time", NEW."id", NEW."internal_ref_number", NEW."is_deleted", NEW."judge", NEW."modified_at", NEW."modified_by_id", NEW."name", NEW."opponent_position_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."priority_id", NEW."start_time"); RETURN NULL;', hash='9931fe0f8420ff881a398b15be18728e7db97a02', operation='UPDATE', pgid='pgtrigger_snapshot_update_80525', table='cases_litigationcases', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='opponent_position',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "cases_opponentpositionevent" ("id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position") VALUES (NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."position"); RETURN NULL;', hash='f1f8177d4c078664a2b8471d3ec7129d22f9ce19', operation='INSERT', pgid='pgtrigger_snapshot_insert_1c73b', table='cases_opponent_position', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='opponent_position',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "cases_opponentpositionevent" ("id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position") VALUES (NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."position"); RETURN NULL;', hash='99919590f2a9528bf4601fe20900d358065d43ac', operation='UPDATE', pgid='pgtrigger_snapshot_update_b4706', table='cases_opponent_position', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='stages',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "cases_stagesevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='43dfed1c7642e0e212bcad20e4e109dec6a6bce2', operation='INSERT', pgid='pgtrigger_snapshot_insert_e8403', table='cases_stages', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='stages',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "cases_stagesevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='176776c723ef5c212037c005c4b7bb6e6351b5f6', operation='UPDATE', pgid='pgtrigger_snapshot_update_7b495', table='cases_stages', when='AFTER')),
        ),
        migrations.AddField(
            model_name='stagesevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='stagesevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='cases.stages'),
        ),
        migrations.AddField(
            model_name='opponentpositionevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='opponentpositionevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='cases.opponent_position'),
        ),
        migrations.AddField(
            model_name='litigationcasesevent',
            name='Stage',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='cases.stages', verbose_name='Stage'),
        ),
        migrations.AddField(
            model_name='litigationcasesevent',
            name='assignee',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Assignee'),
        ),
        migrations.AddField(
            model_name='litigationcasesevent',
            name='case_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='cases.case_type', verbose_name='Case type'),
        ),
        migrations.AddField(
            model_name='litigationcasesevent',
            name='client_position',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='cases.client_position', verbose_name='Client Position'),
        ),
        migrations.AddField(
            model_name='litigationcasesevent',
            name='court',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='core.court', verbose_name='Court name'),
        ),
        migrations.AddField(
            model_name='litigationcasesevent',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='litigationcasesevent',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='litigationcasesevent',
            name='opponent_position',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='cases.opponent_position', verbose_name='Opponent Position'),
        ),
        migrations.AddField(
            model_name='litigationcasesevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='litigationcasesevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='cases.litigationcases'),
        ),
        migrations.AddField(
            model_name='litigationcasesevent',
            name='priority',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='core.priorities', verbose_name='Matter Priority'),
        ),
        migrations.AddField(
            model_name='clientpositionevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='clientpositionevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='cases.client_position'),
        ),
        migrations.AddField(
            model_name='casetypeevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='casetypeevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='cases.case_type'),
        ),
    ]
