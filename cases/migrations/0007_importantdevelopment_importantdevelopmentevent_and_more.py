# Generated by Django 4.1.3 on 2023-01-16 06:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pghistory', '0005_events_middlewareevents'),
        ('cases', '0006_alter_litigationcases_case_status_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ImportantDevelopment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('case_id', models.BigIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_createdby', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_modifiedby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Important Development',
                'verbose_name_plural': 'Important Developments',
            },
        ),
        migrations.CreateModel(
            name='ImportantDevelopmentEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('case_id', models.BigIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL)),
                ('pgh_context', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context')),
                ('pgh_obj', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='cases.importantdevelopment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='folder',
            name='ImportantDevelopment',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_ImportantDevelopment', to='cases.importantdevelopment', verbose_name='Important Development'),
        ),
        migrations.AddField(
            model_name='litigationcases',
            name='ImportantDevelopment',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_ImportantDevelopment', to='cases.importantdevelopment', verbose_name='Important Development'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='importantdevelopment',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "cases_importantdevelopmentevent" ("case_id", "created_at", "created_by_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "title") VALUES (NEW."case_id", NEW."created_at", NEW."created_by_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."title"); RETURN NULL;', hash='87767364d11383246064ecd9cdffacf0f5ed4613', operation='INSERT', pgid='pgtrigger_snapshot_insert_2be47', table='cases_importantdevelopment', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='importantdevelopment',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "cases_importantdevelopmentevent" ("case_id", "created_at", "created_by_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "title") VALUES (NEW."case_id", NEW."created_at", NEW."created_by_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."title"); RETURN NULL;', hash='0f28d13eb749da6830a7b9eb8c6dc4fcb44c424d', operation='UPDATE', pgid='pgtrigger_snapshot_update_09b9f', table='cases_importantdevelopment', when='AFTER')),
        ),
    ]
