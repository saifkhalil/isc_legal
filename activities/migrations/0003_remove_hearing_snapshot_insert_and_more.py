# Generated by Django 4.1.3 on 2023-08-27 05:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0007_remove_pathevent_created_by_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('activities', '0002_initial'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='hearing',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='hearing',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='task',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='task',
            name='snapshot_update',
        ),
        migrations.RemoveField(
            model_name='hearingevent',
            name='assignee',
        ),
        migrations.RemoveField(
            model_name='taskevent',
            name='assignee',
        ),
        migrations.AddField(
            model_name='hearing',
            name='documents',
            field=models.ManyToManyField(blank=True, related_name='hearings', to='core.documents', verbose_name='Documents'),
        ),
        migrations.AddField(
            model_name='hearing',
            name='priority',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.priorities', verbose_name='Hearing Priority'),
        ),
        migrations.AddField(
            model_name='hearing',
            name='remind_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Remind Date'),
        ),
        migrations.AddField(
            model_name='hearing',
            name='remind_me',
            field=models.BooleanField(blank=True, default=False, null=True, verbose_name='Remind me'),
        ),
        migrations.AddField(
            model_name='hearingevent',
            name='priority',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='core.priorities', verbose_name='Hearing Priority'),
        ),
        migrations.AddField(
            model_name='hearingevent',
            name='remind_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Remind Date'),
        ),
        migrations.AddField(
            model_name='hearingevent',
            name='remind_me',
            field=models.BooleanField(blank=True, default=False, null=True, verbose_name='Remind me'),
        ),
        migrations.AddField(
            model_name='task',
            name='assign_date',
            field=models.DateField(blank=True, null=True, verbose_name='Assign date'),
        ),
        migrations.AddField(
            model_name='task',
            name='documents',
            field=models.ManyToManyField(blank=True, related_name='tasks', to='core.documents', verbose_name='Documents'),
        ),
        migrations.AddField(
            model_name='taskevent',
            name='assign_date',
            field=models.DateField(blank=True, null=True, verbose_name='Assign date'),
        ),
        migrations.RemoveField(
            model_name='hearing',
            name='assignee',
        ),
        migrations.RemoveField(
            model_name='task',
            name='assignee',
        ),
        migrations.AlterField(
            model_name='task',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_modifiedby', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='taskevent',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='hearing',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "activities_hearingevent" ("case_id", "comments_by_lawyer", "court_id", "created_at", "created_by_id", "folder_id", "hearing_date", "hearing_status_id", "id", "is_deleted", "latest", "modified_at", "modified_by_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority_id", "remind_date", "remind_me") VALUES (NEW."case_id", NEW."comments_by_lawyer", NEW."court_id", NEW."created_at", NEW."created_by_id", NEW."folder_id", NEW."hearing_date", NEW."hearing_status_id", NEW."id", NEW."is_deleted", NEW."latest", NEW."modified_at", NEW."modified_by_id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."priority_id", NEW."remind_date", NEW."remind_me"); RETURN NULL;', hash='7912d5fb94bcd693ff13c9a9e26c09295790005a', operation='INSERT', pgid='pgtrigger_snapshot_insert_28885', table='activities_hearing', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='hearing',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "activities_hearingevent" ("case_id", "comments_by_lawyer", "court_id", "created_at", "created_by_id", "folder_id", "hearing_date", "hearing_status_id", "id", "is_deleted", "latest", "modified_at", "modified_by_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority_id", "remind_date", "remind_me") VALUES (NEW."case_id", NEW."comments_by_lawyer", NEW."court_id", NEW."created_at", NEW."created_by_id", NEW."folder_id", NEW."hearing_date", NEW."hearing_status_id", NEW."id", NEW."is_deleted", NEW."latest", NEW."modified_at", NEW."modified_by_id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."priority_id", NEW."remind_date", NEW."remind_me"); RETURN NULL;', hash='ece3ae41f5932f9678092a97626dadf75bb553b8', operation='UPDATE', pgid='pgtrigger_snapshot_update_94291', table='activities_hearing', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='task',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "activities_taskevent" ("assign_date", "case_id", "created_at", "created_by_id", "description", "due_date", "folder_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "task_status_id", "title") VALUES (NEW."assign_date", NEW."case_id", NEW."created_at", NEW."created_by_id", NEW."description", NEW."due_date", NEW."folder_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."task_status_id", NEW."title"); RETURN NULL;', hash='6d3b354b1d9603eb6eef36617e74ccfc0e0c120c', operation='INSERT', pgid='pgtrigger_snapshot_insert_0cb53', table='activities_task', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='task',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "activities_taskevent" ("assign_date", "case_id", "created_at", "created_by_id", "description", "due_date", "folder_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "task_status_id", "title") VALUES (NEW."assign_date", NEW."case_id", NEW."created_at", NEW."created_by_id", NEW."description", NEW."due_date", NEW."folder_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."task_status_id", NEW."title"); RETURN NULL;', hash='f1b878efa2b5259c2a93f2de7521d1315a451c34', operation='UPDATE', pgid='pgtrigger_snapshot_update_76b66', table='activities_task', when='AFTER')),
        ),
        migrations.AddField(
            model_name='hearing',
            name='assignee',
            field=models.ManyToManyField(blank=True, related_name='hearing_assignees', to=settings.AUTH_USER_MODEL, verbose_name='Assignee'),
        ),
        migrations.AddField(
            model_name='task',
            name='assignee',
            field=models.ManyToManyField(related_name='task_assignees', to=settings.AUTH_USER_MODEL, verbose_name='Assigned to'),
        ),
    ]
