# Generated by Django 4.1.3 on 2023-01-24 08:00

from django.db import migrations, models
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ("activities", "0017_alter_hearing_hearing_status_and_more"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="hearing",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="hearing",
            name="snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="task",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="task",
            name="snapshot_update",
        ),
        migrations.AddField(
            model_name="hearing",
            name="folder_id",
            field=models.IntegerField(blank=True, null=True, verbose_name="Folder"),
        ),
        migrations.AddField(
            model_name="hearingevent",
            name="folder_id",
            field=models.IntegerField(blank=True, null=True, verbose_name="Folder"),
        ),
        migrations.AddField(
            model_name="task",
            name="folder_id",
            field=models.IntegerField(blank=True, null=True, verbose_name="Folder"),
        ),
        migrations.AddField(
            model_name="taskevent",
            name="folder_id",
            field=models.IntegerField(blank=True, null=True, verbose_name="Folder"),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="hearing",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "activities_hearingevent" ("assignee_id", "case_id", "comments_by_lawyer", "court_id", "created_at", "created_by_id", "folder_id", "hearing_date", "hearing_status_id", "id", "is_deleted", "modified_at", "modified_by_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."assignee_id", NEW."case_id", NEW."comments_by_lawyer", NEW."court_id", NEW."created_at", NEW."created_by_id", NEW."folder_id", NEW."hearing_date", NEW."hearing_status_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;',
                    hash="bea5445998a6bd5d058bb458e4f53532e703667f",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_28885",
                    table="activities_hearing",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="hearing",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "activities_hearingevent" ("assignee_id", "case_id", "comments_by_lawyer", "court_id", "created_at", "created_by_id", "folder_id", "hearing_date", "hearing_status_id", "id", "is_deleted", "modified_at", "modified_by_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."assignee_id", NEW."case_id", NEW."comments_by_lawyer", NEW."court_id", NEW."created_at", NEW."created_by_id", NEW."folder_id", NEW."hearing_date", NEW."hearing_status_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;',
                    hash="31808ee4eadeb1fd030d6a4874133ef4cff73cbe",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_94291",
                    table="activities_hearing",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="task",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "activities_taskevent" ("assignee_id", "case_id", "created_at", "created_by_id", "description", "due_date", "folder_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "task_status_id", "title") VALUES (NEW."assignee_id", NEW."case_id", NEW."created_at", NEW."created_by_id", NEW."description", NEW."due_date", NEW."folder_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."task_status_id", NEW."title"); RETURN NULL;',
                    hash="210ec3d4575f117154a01574735c6e8283070e0f",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_0cb53",
                    table="activities_task",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="task",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "activities_taskevent" ("assignee_id", "case_id", "created_at", "created_by_id", "description", "due_date", "folder_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "task_status_id", "title") VALUES (NEW."assignee_id", NEW."case_id", NEW."created_at", NEW."created_by_id", NEW."description", NEW."due_date", NEW."folder_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."task_status_id", NEW."title"); RETURN NULL;',
                    hash="772032113d201bfebf81c2de11221821bc06ebec",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_76b66",
                    table="activities_task",
                    when="AFTER",
                ),
            ),
        ),
    ]
