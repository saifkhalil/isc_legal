# Generated by Django 4.1.3 on 2023-04-05 08:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pghistory', '0005_events_middlewareevents'),
        ('activities', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='taskevent',
            name='task_status',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='core.status', verbose_name='Task Status'),
        ),
        migrations.AddField(
            model_name='task',
            name='assignee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_assigned_to', to=settings.AUTH_USER_MODEL, verbose_name='Assigned to'),
        ),
        migrations.AddField(
            model_name='task',
            name='comments',
            field=models.ManyToManyField(blank=True, to='core.comments', verbose_name='Comments'),
        ),
        migrations.AddField(
            model_name='task',
            name='created_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_createdby', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='modified_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_modifiedby', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='task_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_task_status', to='core.status', verbose_name='Task Status'),
        ),
        migrations.AddField(
            model_name='hearingevent',
            name='assignee',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Assignee'),
        ),
        migrations.AddField(
            model_name='hearingevent',
            name='court',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='core.court', verbose_name='Court name'),
        ),
        migrations.AddField(
            model_name='hearingevent',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hearingevent',
            name='hearing_status',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='core.status', verbose_name='Hearing Status'),
        ),
        migrations.AddField(
            model_name='hearingevent',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hearingevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='hearingevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='activities.hearing'),
        ),
        migrations.AddField(
            model_name='hearing',
            name='assignee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Assignee'),
        ),
        migrations.AddField(
            model_name='hearing',
            name='comments',
            field=models.ManyToManyField(blank=True, to='core.comments', verbose_name='Comments'),
        ),
        migrations.AddField(
            model_name='hearing',
            name='court',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.court', verbose_name='Court name'),
        ),
        migrations.AddField(
            model_name='hearing',
            name='created_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_createdby', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hearing',
            name='hearing_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_hearing_status', to='core.status', verbose_name='Hearing Status'),
        ),
        migrations.AddField(
            model_name='hearing',
            name='modified_by',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_modifiedby', to=settings.AUTH_USER_MODEL),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='task',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "activities_taskevent" ("assignee_id", "case_id", "created_at", "created_by_id", "description", "due_date", "folder_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "task_status_id", "title") VALUES (NEW."assignee_id", NEW."case_id", NEW."created_at", NEW."created_by_id", NEW."description", NEW."due_date", NEW."folder_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."task_status_id", NEW."title"); RETURN NULL;', hash='210ec3d4575f117154a01574735c6e8283070e0f', operation='INSERT', pgid='pgtrigger_snapshot_insert_0cb53', table='activities_task', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='task',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "activities_taskevent" ("assignee_id", "case_id", "created_at", "created_by_id", "description", "due_date", "folder_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "task_status_id", "title") VALUES (NEW."assignee_id", NEW."case_id", NEW."created_at", NEW."created_by_id", NEW."description", NEW."due_date", NEW."folder_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."task_status_id", NEW."title"); RETURN NULL;', hash='772032113d201bfebf81c2de11221821bc06ebec', operation='UPDATE', pgid='pgtrigger_snapshot_update_76b66', table='activities_task', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='hearing',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "activities_hearingevent" ("assignee_id", "case_id", "comments_by_lawyer", "court_id", "created_at", "created_by_id", "folder_id", "hearing_date", "hearing_status_id", "id", "is_deleted", "latest", "modified_at", "modified_by_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."assignee_id", NEW."case_id", NEW."comments_by_lawyer", NEW."court_id", NEW."created_at", NEW."created_by_id", NEW."folder_id", NEW."hearing_date", NEW."hearing_status_id", NEW."id", NEW."is_deleted", NEW."latest", NEW."modified_at", NEW."modified_by_id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='f9b21f803b036f0812d6990a168ff49885c83ddc', operation='INSERT', pgid='pgtrigger_snapshot_insert_28885', table='activities_hearing', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='hearing',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "activities_hearingevent" ("assignee_id", "case_id", "comments_by_lawyer", "court_id", "created_at", "created_by_id", "folder_id", "hearing_date", "hearing_status_id", "id", "is_deleted", "latest", "modified_at", "modified_by_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."assignee_id", NEW."case_id", NEW."comments_by_lawyer", NEW."court_id", NEW."created_at", NEW."created_by_id", NEW."folder_id", NEW."hearing_date", NEW."hearing_status_id", NEW."id", NEW."is_deleted", NEW."latest", NEW."modified_at", NEW."modified_by_id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='58c9e272cebf76742f95a542bc230f1ac7a17ea5', operation='UPDATE', pgid='pgtrigger_snapshot_update_94291', table='activities_hearing', when='AFTER')),
        ),
    ]
