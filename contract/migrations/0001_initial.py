# Generated by Django 4.1.3 on 2024-06-12 10:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cases', '0006_alter_litigationcases_importantdevelopment'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0010_alter_court_options_alter_path_created_by'),
        ('pghistory', '0005_events_middlewareevents'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(help_text='Contract Id', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of Contract', max_length=500, verbose_name='Title')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Subject')),
                ('company', models.CharField(blank=True, max_length=500, null=True, verbose_name='Company Name')),
                ('out_side_iraq', models.BooleanField(default=False, verbose_name='Out Side Iraq')),
                ('total_amount', models.PositiveBigIntegerField(default=False, verbose_name='Total amount')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('first_party', models.CharField(blank=True, max_length=500, null=True, verbose_name='First Party')),
                ('second_party', models.CharField(blank=True, max_length=500, null=True, verbose_name='Second Party')),
                ('third_party', models.CharField(blank=True, max_length=500, null=True, verbose_name='Third Party')),
                ('auto_renewal', models.BooleanField(default=False, verbose_name='Auto Renewal')),
                ('penal_clause', models.CharField(blank=True, max_length=500, null=True, verbose_name='Penal clause')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('ImportantDevelopment', models.ManyToManyField(blank=True, related_name='%(class)s_ImportantDevelopment', to='cases.importantdevelopment', verbose_name='Important Development')),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_assignee', to=settings.AUTH_USER_MODEL, verbose_name='Assignee')),
                ('comments', models.ManyToManyField(blank=True, to='core.comments', verbose_name='Comments')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_createdby', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_modifiedby', to=settings.AUTH_USER_MODEL)),
                ('paths', models.ManyToManyField(blank=True, to='core.path', verbose_name='Paths')),
            ],
            options={
                'verbose_name': 'Contract',
                'verbose_name_plural': 'Contracts',
            },
        ),
        migrations.CreateModel(
            name='Duration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=250, verbose_name='Type')),
                ('no_of_days', models.PositiveIntegerField()),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_createdby', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_modifiedby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.PositiveBigIntegerField(verbose_name='Amount')),
                ('date', models.DateTimeField()),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_createdby', to=settings.AUTH_USER_MODEL)),
                ('duration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_duration', to='contract.duration')),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_modifiedby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_createdby', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_modifiedby', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Type',
                'verbose_name_plural': 'Types',
            },
        ),
        migrations.CreateModel(
            name='TypeEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL)),
                ('pgh_context', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context')),
                ('pgh_obj', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='contract.type')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('amount', models.PositiveBigIntegerField(verbose_name='Amount')),
                ('date', models.DateTimeField()),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL)),
                ('duration', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='contract.duration')),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL)),
                ('pgh_context', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context')),
                ('pgh_obj', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='contract.payment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DurationEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('type', models.CharField(max_length=250, verbose_name='Type')),
                ('no_of_days', models.PositiveIntegerField()),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL)),
                ('pgh_context', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context')),
                ('pgh_obj', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='contract.duration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContractEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('name', models.CharField(help_text='Name of Contract', max_length=500, verbose_name='Title')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Subject')),
                ('company', models.CharField(blank=True, max_length=500, null=True, verbose_name='Company Name')),
                ('out_side_iraq', models.BooleanField(default=False, verbose_name='Out Side Iraq')),
                ('total_amount', models.PositiveBigIntegerField(default=False, verbose_name='Total amount')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('first_party', models.CharField(blank=True, max_length=500, null=True, verbose_name='First Party')),
                ('second_party', models.CharField(blank=True, max_length=500, null=True, verbose_name='Second Party')),
                ('third_party', models.CharField(blank=True, max_length=500, null=True, verbose_name='Third Party')),
                ('auto_renewal', models.BooleanField(default=False, verbose_name='Auto Renewal')),
                ('penal_clause', models.CharField(blank=True, max_length=500, null=True, verbose_name='Penal clause')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('assignee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Assignee')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL)),
                ('pgh_context', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context')),
                ('pgh_obj', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='contract.contract')),
                ('type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='contract.type', verbose_name='type')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='payments',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_payments', to='contract.payment', verbose_name='Payments'),
        ),
        migrations.AddField(
            model_name='contract',
            name='shared_with',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_shared_with', to=settings.AUTH_USER_MODEL, verbose_name='Shared With'),
        ),
        migrations.AddField(
            model_name='contract',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contract.type', verbose_name='type'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['id', 'name', 'type'], name='contract_co_id_6753df_idx'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='type',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "contract_typeevent" ("created_at", "created_by_id", "id", "is_deleted", "modified_at", "modified_by_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."created_at", NEW."created_by_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='d6749738cbc1eafb45f914aef512f066d3033bfb', operation='INSERT', pgid='pgtrigger_snapshot_insert_0d6cd', table='contract_type', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='type',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "contract_typeevent" ("created_at", "created_by_id", "id", "is_deleted", "modified_at", "modified_by_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."created_at", NEW."created_by_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='3b2f6837203db1dc40a1485d3bb5b93b69377abc', operation='UPDATE', pgid='pgtrigger_snapshot_update_e41e4', table='contract_type', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='payment',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "contract_paymentevent" ("amount", "created_at", "created_by_id", "date", "duration_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."amount", NEW."created_at", NEW."created_by_id", NEW."date", NEW."duration_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='b5087e16924c2e89d45e351aeb5bc525b5cd7769', operation='INSERT', pgid='pgtrigger_snapshot_insert_2d876', table='contract_payment', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='payment',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "contract_paymentevent" ("amount", "created_at", "created_by_id", "date", "duration_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."amount", NEW."created_at", NEW."created_by_id", NEW."date", NEW."duration_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='cee3cdc7cee36316ceb0ec41d42ece51eb3a02a6', operation='UPDATE', pgid='pgtrigger_snapshot_update_9e0bc', table='contract_payment', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='duration',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "contract_durationevent" ("created_at", "created_by_id", "id", "is_deleted", "modified_at", "modified_by_id", "no_of_days", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "type") VALUES (NEW."created_at", NEW."created_by_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", NEW."no_of_days", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."type"); RETURN NULL;', hash='c9706c99f5132f6230934cc73b5d59f498539cae', operation='INSERT', pgid='pgtrigger_snapshot_insert_599b2', table='contract_duration', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='duration',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "contract_durationevent" ("created_at", "created_by_id", "id", "is_deleted", "modified_at", "modified_by_id", "no_of_days", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "type") VALUES (NEW."created_at", NEW."created_by_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", NEW."no_of_days", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."type"); RETURN NULL;', hash='d740cd4dc4e83d870815573a8fd179adb59b8a0d', operation='UPDATE', pgid='pgtrigger_snapshot_update_daf19', table='contract_duration', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='contract',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "contract_contractevent" ("assignee_id", "auto_renewal", "company", "created_at", "created_by_id", "description", "end_time", "first_party", "id", "is_deleted", "modified_at", "modified_by_id", "name", "out_side_iraq", "penal_clause", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "second_party", "start_time", "third_party", "total_amount", "type_id") VALUES (NEW."assignee_id", NEW."auto_renewal", NEW."company", NEW."created_at", NEW."created_by_id", NEW."description", NEW."end_time", NEW."first_party", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", NEW."name", NEW."out_side_iraq", NEW."penal_clause", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."second_party", NEW."start_time", NEW."third_party", NEW."total_amount", NEW."type_id"); RETURN NULL;', hash='3a042c88e32eb71bfc94dbd512bf635c612d92b5', operation='INSERT', pgid='pgtrigger_snapshot_insert_e4d91', table='contract_contract', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='contract',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "contract_contractevent" ("assignee_id", "auto_renewal", "company", "created_at", "created_by_id", "description", "end_time", "first_party", "id", "is_deleted", "modified_at", "modified_by_id", "name", "out_side_iraq", "penal_clause", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "second_party", "start_time", "third_party", "total_amount", "type_id") VALUES (NEW."assignee_id", NEW."auto_renewal", NEW."company", NEW."created_at", NEW."created_by_id", NEW."description", NEW."end_time", NEW."first_party", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", NEW."name", NEW."out_side_iraq", NEW."penal_clause", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."second_party", NEW."start_time", NEW."third_party", NEW."total_amount", NEW."type_id"); RETURN NULL;', hash='ff0f3e68f566b383102282d079c48539539cb101', operation='UPDATE', pgid='pgtrigger_snapshot_update_2d845', table='contract_contract', when='AFTER')),
        ),
    ]
