# Generated by Django 4.1.3 on 2023-04-05 08:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pghistory', '0005_events_middlewareevents'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('firstname', models.CharField(max_length=30, verbose_name='first name')),
                ('lastname', models.CharField(max_length=30, verbose_name='last name')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('photo', models.ImageField(blank=True, default='photos/default.jpg', null=True, upload_to='photos', verbose_name='Photo')),
                ('thumbnail', models.ImageField(blank=True, editable=False, null=True, upload_to='thumbnail', verbose_name='Thumbnail image')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='Username')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is admin')),
                ('is_manager', models.BooleanField(default=False, verbose_name='Is Manager')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Is superuser')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is verified')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Is blocked')),
                ('email_notification', models.BooleanField(default=True, verbose_name='Email Notification')),
                ('i_agree', models.BooleanField(default=False, verbose_name='Please confirm that you read and agree to our terms & conditions')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('Manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Manager')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_createdby', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_modifiedby', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('Description', models.CharField(max_length=250, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='UserEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.IntegerField()),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('firstname', models.CharField(max_length=30, verbose_name='first name')),
                ('lastname', models.CharField(max_length=30, verbose_name='last name')),
                ('email', models.EmailField(max_length=60, verbose_name='email')),
                ('photo', models.ImageField(blank=True, default='photos/default.jpg', null=True, upload_to='photos', verbose_name='Photo')),
                ('thumbnail', models.ImageField(blank=True, editable=False, null=True, upload_to='thumbnail', verbose_name='Thumbnail image')),
                ('username', models.CharField(max_length=30, verbose_name='Username')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is admin')),
                ('is_manager', models.BooleanField(default=False, verbose_name='Is Manager')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Is superuser')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is verified')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Is blocked')),
                ('email_notification', models.BooleanField(default=True, verbose_name='Email Notification')),
                ('i_agree', models.BooleanField(default=False, verbose_name='Please confirm that you read and agree to our terms & conditions')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('Manager', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Manager')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('pgh_context', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context')),
                ('pgh_obj', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='user',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "accounts_userevent" ("Manager_id", "created_at", "created_by_id", "date_joined", "email", "email_notification", "firstname", "i_agree", "id", "is_active", "is_admin", "is_blocked", "is_manager", "is_staff", "is_superuser", "is_verified", "last_login", "lastname", "modified_at", "modified_by_id", "password", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "phone", "photo", "thumbnail", "username") VALUES (NEW."Manager_id", NEW."created_at", NEW."created_by_id", NEW."date_joined", NEW."email", NEW."email_notification", NEW."firstname", NEW."i_agree", NEW."id", NEW."is_active", NEW."is_admin", NEW."is_blocked", NEW."is_manager", NEW."is_staff", NEW."is_superuser", NEW."is_verified", NEW."last_login", NEW."lastname", NEW."modified_at", NEW."modified_by_id", NEW."password", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."phone", NEW."photo", NEW."thumbnail", NEW."username"); RETURN NULL;', hash='d96a6c9bdd6b57f0f619ea953dfcd973f4ae6f7f', operation='INSERT', pgid='pgtrigger_snapshot_insert_5efe8', table='accounts_user', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='user',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "accounts_userevent" ("Manager_id", "created_at", "created_by_id", "date_joined", "email", "email_notification", "firstname", "i_agree", "id", "is_active", "is_admin", "is_blocked", "is_manager", "is_staff", "is_superuser", "is_verified", "last_login", "lastname", "modified_at", "modified_by_id", "password", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "phone", "photo", "thumbnail", "username") VALUES (NEW."Manager_id", NEW."created_at", NEW."created_by_id", NEW."date_joined", NEW."email", NEW."email_notification", NEW."firstname", NEW."i_agree", NEW."id", NEW."is_active", NEW."is_admin", NEW."is_blocked", NEW."is_manager", NEW."is_staff", NEW."is_superuser", NEW."is_verified", NEW."last_login", NEW."lastname", NEW."modified_at", NEW."modified_by_id", NEW."password", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."phone", NEW."photo", NEW."thumbnail", NEW."username"); RETURN NULL;', hash='33947b2f6a0cdcdf760528b5db9138007e23318f', operation='UPDATE', pgid='pgtrigger_snapshot_update_14ad6', table='accounts_user', when='AFTER')),
        ),
    ]
