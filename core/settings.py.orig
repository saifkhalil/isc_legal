"""
Django settings for isc_legal project.

Generated by 'django-admin startproject' using Django 3.1.14.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import environ
import os
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)

from pathlib import Path

from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True



ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'daphne',
    # 'material',
    # 'material.admin',
    'pghistory.admin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'django.contrib.sites',
    'django.contrib.admindocs',
    'mptt',
    'rest_framework_swagger',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_word_filter',
    'channels',
    'djoser',
    'phonenumber_field',
    'import_export',
    'crispy_bootstrap5',
    'easy_thumbnails',
    'rosetta',
    'ckeditor',
    'widget_tweaks',
    'drf_yasg',
    'drf_spectacular',
    'drf_spectacular_sidecar',
    'rest_framework_simplejwt',
    'django_filters',
    'corsheaders',
    'haystack',
    # 'django-environ',
    'accounts',
    'core',
    'cases',
    'activities',
    'crispy_forms',
    'logentry_admin',
    'celery',
    'django_celery_beat',
    'django_celery_results',
    'django_extensions',
    'pghistory',
    'pgtrigger',
    'dbbackup',
    'drf_api_logger',
    'furl',
    'auditlog'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'core.middleware.CurrentUserMiddleware',
    # 'core.middleware.AutoUpdateFieldsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'core.current_user.RequestMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'drf_api_logger.middleware.api_logger_middleware.APILoggerMiddleware',
    'core.middleware.AuditlogMiddleware',
    'django.contrib.admindocs.middleware.XViewMiddleware'
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

ASGI_APPLICATION = 'core.asgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':  env('PG_DATABASE'),
        'USER': env('PG_USER'),
        'PASSWORD': env('PG_PASSWORD'),
        'HOST':  env('PG_DATABASE_HOST'),
        'PORT':  env('PG_DATABASE_PORT'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'Asia/Baghdad'

USE_I18N = True

USE_L10N = True

USE_TZ = True

SITE_ID = 1

LANGUAGES = (
    ('en', _('English')),
    ('ar', _('Arabic')),
)

LOCALE_PATHS = [
    BASE_DIR / 'locale/',
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

AUTH_USER_MODEL = 'accounts.User'

LOGIN_REDIRECT_URL = 'home'
LOGIN_URL = 'login'

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',

    ],
    # 'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.AcceptHeaderVersioning',
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissions',

    ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10,
    'max_limit': 100,
    'default_limit': 10,

    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_CACHE_BACKEND': 'django.core.cache.backends.redis.RedisCache',
    'DEFAULT_CACHE_KEY_FUNC': 'core.utils.cache_key_func',  # Replace with your own cache key function
    'DEFAULT_CACHE_TIMEOUT': 60 * 15,  # Cache timeout in seconds (e.g., 15 minutes)
    # 'DEFAULT_THROTTLE_CLASSES': [
    #     'rest_framework.throttling.AnonRateThrottle',
    #     'rest_framework.throttling.UserRateThrottle'
    # ],
    # 'DEFAULT_THROTTLE_RATES': {
    #     'anon': '10/minute',
    #     'user': '10/minute'
    # }
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.redis.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',  # Replace with your Redis server address

    }
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'ISC Legal App',
    'DESCRIPTION': 'ISC Legal App',
    'VERSION': '0.9.1',
    'SERVE_INCLUDE_SCHEMA': False,
    'CONTACT': {"name": "Saif AlKhateeb", "email": "saif.ibrahim@qi.iq"},
}

SIMPLE_JWT = {
    'BLACKLIST_AFTER_ROTATION': False,
}

PARLER_LANGUAGES = {
    None: (
        {'code': 'en', },
        {'code': 'ar', },
    ),
    'default': {
        'fallback': 'en',  # defaults to PARLER_DEFAULT_LANGUAGE_CODE
        'hide_untranslated': False,  # the default; let .active_translations() return fallbacks too.
    }
}

PARLER_DEFAULT_LANGUAGE_CODE = 'en'

DATA_UPLOAD_MAX_NUMBER_FIELDS = 99999

CORS_ALLOW_ALL_ORIGINS = True  # If this is used then `CORS_ALLOWED_ORIGINS` will not have any effect
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
    'https://localhost:3000',
]  # If this is used, then not need to use `CORS_ALLOW_ALL_ORIGINS = True`
CORS_ALLOWED_ORIGIN_REGEXES = [
    'http://localhost:3000',
    'https://localhost:3000',
]

JAZZMIN_SETTINGS = {
    "show_ui_builder": True
}
JAZZMIN_UI_TWEAKS = {
    "theme": "flatly",
    "dark_mode_theme": "darkly",
}

TABULAR_PERMISSIONS_CONFIG = {
    'template': 'tabular_permissions/admin/tabular_permissions.html',
    'exclude': {
        'override': False,
        'apps': [],
        'models': [],
        'function': 'tabular_permissions.helpers.dummy_permissions_exclude'
    },
    'auto_implement': True,
    'use_for_concrete': False,
    'custom_permission_translation': 'tabular_permissions.helpers.custom_permissions_translator',
    'apps_customization_func': 'tabular_permissions.helpers.apps_customization_func',
    'custom_permissions_customization_func': 'tabular_permissions.helpers.custom_permissions_customization_func',
}

CRISPY_TEMPLATE_PACK = 'bootstrap4'

### SMTP CONFIGURATION ####

EMAIL_HOST = env('EMAIL_HOST')
EMAIL_USE_TLS = env('EMAIL_USE_TLS')
EMAIL_PORT = env('EMAIL_PORT')
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL')

# CELERY_TIMEZONE = 'Asia/Baghdad'
# CELERY_TASK_TRACK_STARTED = True
# CELERY_TASK_TIME_LIMIT = 30 * 60
# CELERY_RESULT_BACKEND = 'django-db'
# CELERY_BROKER_URL = "redis://localhost:6379"
# CELERY_RESULT_BACKEND = "redis://localhost:6379"
# CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

CELERY_BROKER_URL = 'redis://127.0.0.1:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_BACKEND = 'django-db'
CELERY_TIMEZONE = 'Asia/Baghdad'
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'




# PGHISTORY_ADMIN_LIST_DISPLAY = ['user',]


JAZZMIN_SETTINGS = {
    "site_title": "Legal Software Admin",
    "site_header": "Legal Software Admin",
    "site_brand": "Legal Software Admin",
    "welcome_sign": "Welcome to the Legal Software",
    "copyright": "ISC",
    "site_icon": None,
    "icons": {
        "accounts": "fas fa-users-cog",
        "accounts.user": "fas fa-user",
        "accounts.department": "fa fa-building",
        "auth.group": "fa fa-users",
        "activities.hearing": "fa fa-university",
        "activities.task": "fa fa-tasks",
        "authtoken.tokenproxy": "fa fa-magic",
        "cases.case_type": "fa fa-trello",
        "cases.client_position": "fa fa-user",
        "auth.group": "fa fa-users",
        "admin.logentry": "fa fa-file-text",

    },
}

JAZZMIN_UI_TWEAKS = {

    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "accent": "accent-navy",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": False,
    "sidebar": "sidebar-dark-warning",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "default",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-outline-primary",
        "secondary": "btn-outline-secondary",
        "info": "btn-outline-info",
        "warning": "btn-outline-warning",
        "danger": "btn-outline-danger",
        "success": "btn-outline-success"
    }
}


class Messages(object):
    INVALID_CREDENTIALS_ERROR = "البريد او كلمة المرور غير صحيحة"
    INACTIVE_ACCOUNT_ERROR = "اسم المستخدم متوقف"
    INVALID_TOKEN_ERROR = "خطا في التوكن"
    INVALID_UID_ERROR = "Invalid user id or user doesn't exist."
    STALE_TOKEN_ERROR = "Stale token for given user."
    PASSWORD_MISMATCH_ERROR = "كلمة المرور غير متوافقة"
    USERNAME_MISMATCH_ERROR = "The two {0} fields didn't match."
    INVALID_PASSWORD_ERROR = "كلمة المرور الحالية غير صحيحة"
    EMAIL_NOT_FOUND = "البريد الالكتروني غير متوفر"
    CANNOT_CREATE_USER_ERROR = "لا يمكن تكوين الحساب"


DJOSER = {
    'LOGOUT_ON_PASSWORD_CHANGE': True,
    'SEND_ACTIVATION_EMAIL': False,
    'SEND_CONFIRMATION_EMAIL': False,
    'PASSWORD_RESET_CONFIRM_URL': 'account/reset/{uid}/{token}/',
    # 'USERNAME_RESET_CONFIRM_URL': 'accounts/reset/{uid}/{token}/',
    # 'ACTIVATION_URL': '#/activate/{uid}/{token}',
    'CONSTANTS': {
        'messages': 'core.settings.Messages'
    }
}


# CHANNEL_LAYERS = {
#     "default": {
#         "BACKEND": "channels_redis.core.RedisChannelLayer",
#         "CONFIG": {
#             "hosts": [("localhost", 6379)],
#         },
#     },
# }

MPTT_DEFAULT_LEVEL_INDICATOR = "---"
DEFAULT_LEVEL_INDICATOR = "---"

DBBACKUP_STORAGE = 'django.core.files.storage.FileSystemStorage'
DBBACKUP_STORAGE_OPTIONS = {'location': 'db_backup/'}

## DRF API LOGGER SETTINGS ##

DRF_API_LOGGER_DATABASE = True

# Sensitive data will be replaced with "***FILTERED***".
DRF_API_LOGGER_EXCLUDE_KEYS = ['password', 'token', 'access', 'refresh']
# AUDITLOG_EXCLUDE_TRACKING_FIELDS = (
#     "created_by",
#     "modified_by"
# )
# AUDITLOG_INCLUDE_ALL_MODELS = True

# AUDITLOG_EXCLUDE_TRACKING_MODELS = (
#     'accounts',
#     'django'
# )

# AUDITLOG_MODEL = 'core.LogEntry'


ZOHO = {
    'login_host': env('ZOHO_LOGIN_HOST'),
    'get_employees_url': env('ZOHO_EMPLOYEE_URL'),
    'refresh_token': env('ZOHO_REFRESH_TOKEN'),
    'client_id': env('ZOHO_CLIENT_ID'),
    'client_secret': env('ZOHO_CLIENT_SECRET'),
    'grant_type': env('ZOHO_GRANT_TYPE')
}

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.elasticsearch7_backend.Elasticsearch7SearchEngine',
        'URL': 'http://127.0.0.1:9200/',
        'INDEX_NAME': 'employees',
        'INCLUDE_SPELLING': True,
        'BATCH_SIZE': 100,
    },
    'autocomplete': {
        'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        'PATH': 'core/search/whoosh_index',
        'STORAGE': 'file',
        'POST_LIMIT': 128 * 1024 * 1024,
        'INCLUDE_SPELLING': True,
        'BATCH_SIZE': 100,
    },
}

HAYSTACK_SIGNAL_PROCESSOR = 'accounts.signals.EmployeesSignalProcessor'
HAYSTACK_DEFAULT_OPERATOR = 'OR'  # Change to 'OR' if you prefer
HAYSTACK_SEARCH_RESULTS_PER_PAGE = 10  # Adjust as needed