# Generated by Django 4.1.3 on 2023-01-22 07:47

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('pghistory', '0005_events_middlewareevents'),
        ('core', '0006_statusevent_status_snapshot_insert_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'verbose_name': 'Path',
                'verbose_name_plural': 'Paths',
            },
        ),
        migrations.CreateModel(
            name='PathEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='comments',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='comments',
            name='snapshot_update',
        ),
        migrations.AddField(
            model_name='comments',
            name='folder_id',
            field=models.BigIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='commentsevent',
            name='folder_id',
            field=models.BigIntegerField(blank=True, null=True),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='comments',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_commentsevent" ("case_id", "comment", "created_at", "created_by_id", "event_id", "folder_id", "hearing_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "task_id") VALUES (NEW."case_id", NEW."comment", NEW."created_at", NEW."created_by_id", NEW."event_id", NEW."folder_id", NEW."hearing_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."task_id"); RETURN NULL;', hash='c546abdeb3b02d0ce281d83069b8f755eeb491a7', operation='INSERT', pgid='pgtrigger_snapshot_insert_cf925', table='core_comments', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='comments',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_commentsevent" ("case_id", "comment", "created_at", "created_by_id", "event_id", "folder_id", "hearing_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "task_id") VALUES (NEW."case_id", NEW."comment", NEW."created_at", NEW."created_by_id", NEW."event_id", NEW."folder_id", NEW."hearing_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."task_id"); RETURN NULL;', hash='b047c8ad3e7110bdfd2aa09896cabb8d6bcd2714', operation='UPDATE', pgid='pgtrigger_snapshot_update_eb534', table='core_comments', when='AFTER')),
        ),
        migrations.AddField(
            model_name='pathevent',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to='core.path'),
        ),
        migrations.AddField(
            model_name='pathevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='pathevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='core.path'),
        ),
        migrations.AddField(
            model_name='path',
            name='documents',
            field=models.ManyToManyField(blank=True, related_name='paths', to='core.documents', verbose_name='Documents'),
        ),
        migrations.AddField(
            model_name='path',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.path'),
        ),
        migrations.AlterUniqueTogether(
            name='path',
            unique_together={('parent', 'name')},
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='path',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_pathevent" ("id", "level", "lft", "name", "parent_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "rght", "tree_id") VALUES (NEW."id", NEW."level", NEW."lft", NEW."name", NEW."parent_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."rght", NEW."tree_id"); RETURN NULL;', hash='c1ac97c39e615c724bbca460c3ea72e983a5a5fe', operation='INSERT', pgid='pgtrigger_snapshot_insert_5eab7', table='core_path', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='path',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_pathevent" ("id", "level", "lft", "name", "parent_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "rght", "tree_id") VALUES (NEW."id", NEW."level", NEW."lft", NEW."name", NEW."parent_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."rght", NEW."tree_id"); RETURN NULL;', hash='a8d533d367a8941846499272a899c5d3b41a3759', operation='UPDATE', pgid='pgtrigger_snapshot_update_56fb9', table='core_path', when='AFTER')),
        ),
    ]
