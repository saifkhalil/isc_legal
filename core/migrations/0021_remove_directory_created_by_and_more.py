# Generated by Django 4.1.3 on 2023-01-22 07:20

from django.db import migrations, models
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0020_remove_directoryevent_created_by_and_more"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="directory",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="directory",
            name="document",
        ),
        migrations.RemoveField(
            model_name="directory",
            name="modified_by",
        ),
        migrations.RemoveField(
            model_name="directory",
            name="sub_directory",
        ),
        migrations.RemoveField(
            model_name="directoryevent",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="directoryevent",
            name="modified_by",
        ),
        migrations.RemoveField(
            model_name="directoryevent",
            name="pgh_context",
        ),
        migrations.RemoveField(
            model_name="directoryevent",
            name="pgh_obj",
        ),
        migrations.RemoveField(
            model_name="directoryevent",
            name="sub_directory",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="comments",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="comments",
            name="snapshot_update",
        ),
        migrations.AddField(
            model_name="comments",
            name="folder_id",
            field=models.BigIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="commentsevent",
            name="folder_id",
            field=models.BigIntegerField(blank=True, null=True),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="comments",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "core_commentsevent" ("case_id", "comment", "created_at", "created_by_id", "event_id", "folder_id", "hearing_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "task_id") VALUES (NEW."case_id", NEW."comment", NEW."created_at", NEW."created_by_id", NEW."event_id", NEW."folder_id", NEW."hearing_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."task_id"); RETURN NULL;',
                    hash="c546abdeb3b02d0ce281d83069b8f755eeb491a7",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_cf925",
                    table="core_comments",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="comments",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "core_commentsevent" ("case_id", "comment", "created_at", "created_by_id", "event_id", "folder_id", "hearing_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "task_id") VALUES (NEW."case_id", NEW."comment", NEW."created_at", NEW."created_by_id", NEW."event_id", NEW."folder_id", NEW."hearing_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."task_id"); RETURN NULL;',
                    hash="b047c8ad3e7110bdfd2aa09896cabb8d6bcd2714",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_eb534",
                    table="core_comments",
                    when="AFTER",
                ),
            ),
        ),
        migrations.DeleteModel(
            name="directory",
        ),
        migrations.DeleteModel(
            name="DirectoryEvent",
        ),
    ]
