# Generated by Django 4.1.3 on 2022-11-20 11:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('pghistory', '0005_events_middlewareevents'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0003_alter_comments_comment'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentsEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('comment', models.CharField(max_length=250, verbose_name='Comment')),
                ('case_id', models.BigIntegerField(blank=True, null=True)),
                ('event_id', models.BigIntegerField(blank=True, null=True)),
                ('task_id', models.BigIntegerField(blank=True, null=True)),
                ('hearing_id', models.BigIntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContractsEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('attachment', models.FileField(upload_to='contracts/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png', 'git'])], verbose_name='Attachment')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourtEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentsEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('attachment', models.FileField(upload_to='documents/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png', 'git'])], verbose_name='Attachment')),
                ('case_id', models.IntegerField(blank=True, null=True, verbose_name='Litigation Case')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrioritiesEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('priority', models.CharField(max_length=250, verbose_name='Priority')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RepliesEvent',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('reply', models.CharField(max_length=250, verbose_name='Reply')),
                ('comment_id', models.BigIntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='comments',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_commentsevent" ("case_id", "comment", "created_at", "created_by_id", "event_id", "hearing_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "task_id") VALUES (NEW."case_id", NEW."comment", NEW."created_at", NEW."created_by_id", NEW."event_id", NEW."hearing_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."task_id"); RETURN NULL;', hash='f1bd04bf44cb7c5f01c49ccd6a0ac568f7f9d236', operation='INSERT', pgid='pgtrigger_snapshot_insert_cf925', table='core_comments', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='comments',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_commentsevent" ("case_id", "comment", "created_at", "created_by_id", "event_id", "hearing_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "task_id") VALUES (NEW."case_id", NEW."comment", NEW."created_at", NEW."created_by_id", NEW."event_id", NEW."hearing_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."task_id"); RETURN NULL;', hash='9069731b93045e4064d9dd9cd5a98da91088c213', operation='UPDATE', pgid='pgtrigger_snapshot_update_eb534', table='core_comments', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='contracts',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_contractsevent" ("attachment", "created_at", "created_by_id", "id", "is_deleted", "modified_at", "modified_by_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."attachment", NEW."created_at", NEW."created_by_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='7fc6cfb327b62a96a69292acf93276029856af60', operation='INSERT', pgid='pgtrigger_snapshot_insert_a6999', table='core_contracts', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='contracts',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_contractsevent" ("attachment", "created_at", "created_by_id", "id", "is_deleted", "modified_at", "modified_by_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."attachment", NEW."created_at", NEW."created_by_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='2d6d9dd506be6901f97760fdd5703d074be687cd', operation='UPDATE', pgid='pgtrigger_snapshot_update_0fac5', table='core_contracts', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='court',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_courtevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='b3d2a282b778263fe0de713bf8eb2ff0f9996789', operation='INSERT', pgid='pgtrigger_snapshot_insert_5bdfa', table='core_court', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='court',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_courtevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='209d6c8bce3cf933c78f657249591493310907a3', operation='UPDATE', pgid='pgtrigger_snapshot_update_1ab18', table='core_court', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='documents',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_documentsevent" ("attachment", "case_id", "created_at", "created_by_id", "id", "is_deleted", "modified_at", "modified_by_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."attachment", NEW."case_id", NEW."created_at", NEW."created_by_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='d5ac586ec7bf3ccd0da1abd009e00164f988282b', operation='INSERT', pgid='pgtrigger_snapshot_insert_49b87', table='core_documents', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='documents',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_documentsevent" ("attachment", "case_id", "created_at", "created_by_id", "id", "is_deleted", "modified_at", "modified_by_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."attachment", NEW."case_id", NEW."created_at", NEW."created_by_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", NEW."name", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id"); RETURN NULL;', hash='ff6122cb5cd05d1803cbd2b84512fe99753d3ef4', operation='UPDATE', pgid='pgtrigger_snapshot_update_c495f', table='core_documents', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='priorities',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_prioritiesevent" ("id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority") VALUES (NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."priority"); RETURN NULL;', hash='3f5c0acde4c8b29a4ddb9d7362f90927e99f941c', operation='INSERT', pgid='pgtrigger_snapshot_insert_229f2', table='core_priorities', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='priorities',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_prioritiesevent" ("id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority") VALUES (NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."priority"); RETURN NULL;', hash='d2f0f5247bdbe5a8a29b870b72e43967008accea', operation='UPDATE', pgid='pgtrigger_snapshot_update_23f88', table='core_priorities', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='replies',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "core_repliesevent" ("comment_id", "created_at", "created_by_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "reply") VALUES (NEW."comment_id", NEW."created_at", NEW."created_by_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."reply"); RETURN NULL;', hash='812432a73dd4d5b74f49910d639d66b3511c80a3', operation='INSERT', pgid='pgtrigger_snapshot_insert_a9e98', table='core_replies', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='replies',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "core_repliesevent" ("comment_id", "created_at", "created_by_id", "id", "is_deleted", "modified_at", "modified_by_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "reply") VALUES (NEW."comment_id", NEW."created_at", NEW."created_by_id", NEW."id", NEW."is_deleted", NEW."modified_at", NEW."modified_by_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."reply"); RETURN NULL;', hash='c59b3498b6336b84390748d483237dce99c6d7cf', operation='UPDATE', pgid='pgtrigger_snapshot_update_10b7e', table='core_replies', when='AFTER')),
        ),
        migrations.AddField(
            model_name='repliesevent',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='repliesevent',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='repliesevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='repliesevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='core.replies'),
        ),
        migrations.AddField(
            model_name='prioritiesevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='prioritiesevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='core.priorities'),
        ),
        migrations.AddField(
            model_name='documentsevent',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentsevent',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentsevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='documentsevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='core.documents'),
        ),
        migrations.AddField(
            model_name='courtevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='courtevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='core.court'),
        ),
        migrations.AddField(
            model_name='contractsevent',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contractsevent',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contractsevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='contractsevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='core.contracts'),
        ),
        migrations.AddField(
            model_name='commentsevent',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commentsevent',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', related_query_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commentsevent',
            name='pgh_context',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context'),
        ),
        migrations.AddField(
            model_name='commentsevent',
            name='pgh_obj',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='core.comments'),
        ),
    ]
